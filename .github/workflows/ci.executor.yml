name: CI Build - Executor

on:
  workflow_dispatch:
    inputs:
  push:
    paths:
    - 'src/executor/**'
  pull_request:
    paths: 
    - 'src/executor/**'

defaults:
  run:
    shell: bash
    working-directory: src/executor/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 17.x
      uses: actions/setup-node@v2
      with:
        node-version: 17.x
        cache: 'npm'
        cache-dependency-path: src/executor/package-lock.json
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test --ci --passWithNoTests
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectBaseDir: src/executor/
        args: >
          -Dsonar.sources=source/
          -Dsonar.tests=spec/
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    if: contains('refs/heads/main', github.ref)
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: src/executor/
          push: true
          tags: |
            ghcr.io/agile-waterfall-inc/flooq-executor:latest
            
  deploy:
    runs-on: ubuntu-latest
    needs: [publish]
    if: contains('refs/heads/main', github.ref)
    steps:
      - uses: actions/checkout@v2

      - uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}
          context: init-lab

      - uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: "./.helm/"
          overrideFiles: './.helm/values-staging.yaml'
          helm-version: "latest"
          namespace: class-pm4-2022-5-staging
          releaseName: flooq-staging
        id: bake
      
      - name: Output Manifest
        run: cat ${{ steps.bake.outputs.manifestsBundle }}
        
      - uses: Azure/k8s-deploy@v1.4
        with:
          action: deploy
          namespace: class-pm4-2022-5-staging
          images: |
            ghcr.io/agile-waterfall-inc/flooq-api:latest
            ghcr.io/agile-waterfall-inc/flooq-editor:latest
            ghcr.io/agile-waterfall-inc/flooq-executor:latest
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
