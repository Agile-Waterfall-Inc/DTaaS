name: CD - Deploy Prod

on:
  release:
    types: [published]

jobs:
  buildApi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push API to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: src/api/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/agile-waterfall-inc/flooq-api:latest
            ghcr.io/agile-waterfall-inc/flooq-api:${{ github.event.release.tag_name }}
  buildEditor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Editor to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: src/editor/
          push: true
          tags: |
            ghcr.io/agile-waterfall-inc/flooq-editor:latest
            ghcr.io/agile-waterfall-inc/flooq-editor:${{ github.event.release.tag_name }}
  buildExecutor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Executor to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: src/executor/
          push: true
          tags: |
            ghcr.io/agile-waterfall-inc/flooq-executor:latest
            ghcr.io/agile-waterfall-inc/flooq-executor:${{ github.event.release.tag_name }}

  publish:
    runs-on: ubuntu-latest
    needs: [buildApi, buildEditor, buildExecutor]
    steps:
      - uses: actions/checkout@v2

      - uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG_PROD }}
          context: init-lab

      - uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: "./.helm/"
          overrideFiles: './.helm/values-prod.yaml'
          helm-version: "latest"
          namespace: class-pm4-2022-5-prod
          releaseName: flooq-prod
        id: bake
        
      - uses: Azure/k8s-deploy@v1.4
        with:
          action: deploy
          namespace: class-pm4-2022-5-prod
          images: |
            ghcr.io/agile-waterfall-inc/flooq-api:${{ github.event.release.tag_name }}
            ghcr.io/agile-waterfall-inc/flooq-editor:${{ github.event.release.tag_name }}
            ghcr.io/agile-waterfall-inc/flooq-executor:${{ github.event.release.tag_name }}
          manifests: ${{ steps.bake.outputs.manifestsBundle }}    
          strategy: blue-green
          route-method: service

      - uses: Azure/k8s-deploy@v1.4
        if: ${{ failure() }}
        with:
          action: reject
          namespace: class-pm4-2022-5-prod
          images: |
            ghcr.io/agile-waterfall-inc/flooq-api:${{ github.event.release.tag_name }}
            ghcr.io/agile-waterfall-inc/flooq-editor:${{ github.event.release.tag_name }}
            ghcr.io/agile-waterfall-inc/flooq-executor:${{ github.event.release.tag_name }}
          manifests: ${{ steps.bake.outputs.manifestsBundle }}    
          strategy: blue-green
          route-method: service

      - uses: Azure/k8s-deploy@v1.4
        with:
          action: promote
          namespace: class-pm4-2022-5-prod
          images: |
            ghcr.io/agile-waterfall-inc/flooq-api:${{ github.event.release.tag_name }}
            ghcr.io/agile-waterfall-inc/flooq-editor:${{ github.event.release.tag_name }}
            ghcr.io/agile-waterfall-inc/flooq-executor:${{ github.event.release.tag_name }}
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          strategy: blue-green
          route-method: service
